name: build

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: windows-latest

    defaults:
      run:
        working-directory: src

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1.6.0
        with:
          dotnet-version: '3.1.x'

      - name: Rename .env-template
        run: |
          Rename-Item "RecordingBot.Tests\.env-template" -NewName ".env"
          Rename-Item "RecordingBot.Console\.env-template" -NewName ".env"

      - name: Build project
        run: dotnet build

      - name: Test project
        id: test
        run: |
          $OUTPUT=(dotnet test --logger "trx;LogFileName=test-results.trx") | Out-String
          echo $OUTPUT
          $OUTPUT=$OUTPUT -replace "%", "%25" -replace "\n", "%0A" -replace "\r", "%0D"
          echo "::set-output name=stdout::$OUTPUT"

      - name: Post test results
        if: ${{ failure() && steps.test.outcome == 'failure' }}
        uses: actions/github-script@v2.0.0
        env:
          STDOUT: "```${{ steps.test.outputs.stdout }}```"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `<details><summary>Test results:</summary>\n\n${process.env.STDOUT}\n\n</details>`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Lint helm chart
        id: helm
        working-directory: deploy/teams-recording-bot
        run: |
          $OUTPUT=(helm lint) | Out-String
          echo $OUTPUT
          $OUTPUT=$OUTPUT -replace "%", "%25" -replace "\n", "%0A" -replace "\r", "%0D"
          echo "::set-output name=stdout::$OUTPUT"

      - name: Post helm results
        if: ${{ failure() && steps.helm.outcome == 'failure' }}
        uses: actions/github-script@v2.0.0
        env:
          STDOUT: "```${{ steps.helm.outputs.stdout }}```"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `<details><summary>Helm lint failed:</summary>\n\n${process.env.STDOUT}\n\n</details>`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Archive test results
        uses: actions/upload-artifact@v2
        with:
          name: test-report
          path: src\RecordingBot.Tests\TestResults\test-results.trx
